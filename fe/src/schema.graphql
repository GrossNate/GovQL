type Query {
  voteOne(
    """Filter by fields"""
    filter: FilterFindOnevotesInput
    skip: Int
    sort: SortFindOnevotesInput
  ): votes
  voteMany(
    """Filter by fields"""
    filter: FilterFindManyvotesInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyvotesInput
  ): [votes!]!
  voteCount(
    """Filter by fields"""
    filter: FilterCountvotesInput
  ): Int
}

type votes {
  amendment: votesAmendment
  bill: votesBill
  nomination: votesNomination
  category: String
  chamber: String
  congress: Float
  date: String
  number: Float
  question: String
  record_modified: String
  requires: String
  result: String
  result_text: String
  session: String
  source_url: String
  subject: String
  type: String
  updated_at: String
  vote_id: String
  votes: [votesVotes]
  _id: MongoID!
}

type votesAmendment {
  number: Float
  purpose: String
  type: String
}

type votesBill {
  congress: Float
  number: Float
  title: String
  type: String
}

type votesNomination {
  number: String
  title: String
}

type votesVotes {
  Nay: [votesVotesNay]
  Not_Voting: [votesVotesNay]
  Present: [votesVotesNay]
  Yea: [votesVotesNay]
}

type votesVotesNay {
  display_name: String
  first_name: String
  id: String
  last_name: String
  party: String
  state: String
}

"""
The `ID` scalar type represents a unique MongoDB identifier in collection. MongoDB by default use 12-byte ObjectId value (https://docs.mongodb.com/manual/reference/bson-types/#objectid). But MongoDB also may accepts string or integer as correct values for _id field.
"""
scalar MongoID

""""""
input FilterFindOnevotesInput {
  amendment: FilterFindOnevotesAmendmentInput
  bill: FilterFindOnevotesBillInput
  nomination: FilterFindOnevotesNominationInput
  category: String
  chamber: String
  congress: Float
  date: String
  number: Float
  question: String
  record_modified: String
  requires: String
  result: String
  result_text: String
  session: String
  source_url: String
  subject: String
  type: String
  updated_at: String
  vote_id: String
  votes: [FilterFindOnevotesVotesInput]
  _id: MongoID

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindOnevotesOperatorsInput
  OR: [FilterFindOnevotesInput!]
  AND: [FilterFindOnevotesInput!]

  """Filter votes by yeas from a Congressperson"""
  votedYea: String

  """Filter votes by nays from a Congressperson"""
  votedNay: String
}

""""""
input FilterFindOnevotesAmendmentInput {
  number: Float
  purpose: String
  type: String
}

""""""
input FilterFindOnevotesBillInput {
  congress: Float
  number: Float
  title: String
  type: String
}

""""""
input FilterFindOnevotesNominationInput {
  number: String
  title: String
}

""""""
input FilterFindOnevotesVotesInput {
  Nay: [FilterFindOnevotesVotesNayInput]
  Not_Voting: [FilterFindOnevotesVotesNayInput]
  Present: [FilterFindOnevotesVotesNayInput]
  Yea: [FilterFindOnevotesVotesNayInput]
}

""""""
input FilterFindOnevotesVotesNayInput {
  display_name: String
  first_name: String
  id: String
  last_name: String
  party: String
  state: String
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindOnevotesOperatorsInput {
  _id: FilterFindOnevotes_idOperatorsInput
}

input FilterFindOnevotes_idOperatorsInput {
  gt: MongoID
  gte: MongoID
  lt: MongoID
  lte: MongoID
  ne: MongoID
  in: [MongoID]
  nin: [MongoID]
  exists: Boolean
}

enum SortFindOnevotesInput {
  _ID_ASC
  _ID_DESC
}

""""""
input FilterFindManyvotesInput {
  amendment: FilterFindManyvotesAmendmentInput
  bill: FilterFindManyvotesBillInput
  nomination: FilterFindManyvotesNominationInput
  category: String
  chamber: String
  congress: Float
  date: String
  number: Float
  question: String
  record_modified: String
  requires: String
  result: String
  result_text: String
  session: String
  source_url: String
  subject: String
  type: String
  updated_at: String
  vote_id: String
  votes: [FilterFindManyvotesVotesInput]
  _id: MongoID

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyvotesOperatorsInput
  OR: [FilterFindManyvotesInput!]
  AND: [FilterFindManyvotesInput!]

  """Filter votes by yeas from a Congressperson"""
  votedYea: String

  """Filter votes by nays from a Congressperson"""
  votedNay: String
}

""""""
input FilterFindManyvotesAmendmentInput {
  number: Float
  purpose: String
  type: String
}

""""""
input FilterFindManyvotesBillInput {
  congress: Float
  number: Float
  title: String
  type: String
}

""""""
input FilterFindManyvotesNominationInput {
  number: String
  title: String
}

""""""
input FilterFindManyvotesVotesInput {
  Nay: [FilterFindManyvotesVotesNayInput]
  Not_Voting: [FilterFindManyvotesVotesNayInput]
  Present: [FilterFindManyvotesVotesNayInput]
  Yea: [FilterFindManyvotesVotesNayInput]
}

""""""
input FilterFindManyvotesVotesNayInput {
  display_name: String
  first_name: String
  id: String
  last_name: String
  party: String
  state: String
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyvotesOperatorsInput {
  _id: FilterFindManyvotes_idOperatorsInput
}

input FilterFindManyvotes_idOperatorsInput {
  gt: MongoID
  gte: MongoID
  lt: MongoID
  lte: MongoID
  ne: MongoID
  in: [MongoID]
  nin: [MongoID]
  exists: Boolean
}

enum SortFindManyvotesInput {
  _ID_ASC
  _ID_DESC
}

""""""
input FilterCountvotesInput {
  amendment: FilterCountvotesAmendmentInput
  bill: FilterCountvotesBillInput
  nomination: FilterCountvotesNominationInput
  category: String
  chamber: String
  congress: Float
  date: String
  number: Float
  question: String
  record_modified: String
  requires: String
  result: String
  result_text: String
  session: String
  source_url: String
  subject: String
  type: String
  updated_at: String
  vote_id: String
  votes: [FilterCountvotesVotesInput]
  _id: MongoID

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterCountvotesOperatorsInput
  OR: [FilterCountvotesInput!]
  AND: [FilterCountvotesInput!]

  """Filter votes by yeas from a Congressperson"""
  votedYea: String

  """Filter votes by nays from a Congressperson"""
  votedNay: String
}

""""""
input FilterCountvotesAmendmentInput {
  number: Float
  purpose: String
  type: String
}

""""""
input FilterCountvotesBillInput {
  congress: Float
  number: Float
  title: String
  type: String
}

""""""
input FilterCountvotesNominationInput {
  number: String
  title: String
}

""""""
input FilterCountvotesVotesInput {
  Nay: [FilterCountvotesVotesNayInput]
  Not_Voting: [FilterCountvotesVotesNayInput]
  Present: [FilterCountvotesVotesNayInput]
  Yea: [FilterCountvotesVotesNayInput]
}

""""""
input FilterCountvotesVotesNayInput {
  display_name: String
  first_name: String
  id: String
  last_name: String
  party: String
  state: String
}

"""For performance reason this type contains only *indexed* fields."""
input FilterCountvotesOperatorsInput {
  _id: FilterCountvotes_idOperatorsInput
}

input FilterCountvotes_idOperatorsInput {
  gt: MongoID
  gte: MongoID
  lt: MongoID
  lte: MongoID
  ne: MongoID
  in: [MongoID]
  nin: [MongoID]
  exists: Boolean
}